LISTOP_T        car 
PLUS_T        +
LISTOP_T        cdr 
MINUS_T        -
CONS_T        cons
DIV_T        /
IF_T        if
MULT_T        *
ELSE_T        else
EQUALTO_T        =
AND_T        and
GT_T        >
OR_T        or
GT_T        >
NOT_T        not
GTE_T        >=
DEFINE_T        define
LTE_T        <=
NUMBERP_T        number?
LPAREN_T        (
STRINGP_T        string?
RPAREN_T        )
LISTP_T        list?
SQUOTE_T        '
COND_T        cond
DISPLAY_T        display
NEWLINE_T        newline
IDENT_T        less
MODULO_T        modulo
ELSE_T        else
ROUND_T        round
ZEROP_T        zero?
NULLP_T        null?
IDENT_T        char
ERROR_T        ?
LISTOP_T        cadr 
LISTOP_T        cddr 
LISTOP_T        caddr 
LISTOP_T        cdddr 
IDENT_T        abc
ERROR_T        ?
IDENT_T        some
IDENT_T        more
LET_T        let
LBRACK_T        [
RBRACK_T        ]
IDENT_T        abc
ERROR_T        .
IDENT_T        def
IDENT_T        symbols
AND_T        and
IDENT_T        a
IDENT_T        line
IDENT_T        of
IDENT_T        numbers
IDENT_T        cartalk
NUMLIT_T        1
NUMLIT_T        123
NUMLIT_T        12.23
NUMLIT_T        .34
NUMLIT_T        123
NUMLIT_T        -1
NUMLIT_T        -2.2
NUMLIT_T        +15
NUMLIT_T        +.5
NUMLIT_T        +5.
+.
STRLIT_T        "A string"
STRLIT_T        "or two; or 3"
LISTOP_T        car
PLUS_T        +
LISTOP_T        cdr
MULT_T        *
LISTOP_T        cddr
DIV_T        /
LISTOP_T        caddr
MINUS_T        -
CONS_T        cons
DIV_T        /
IF_T        if
MULT_T        *
ELSE_T        else
EQUALTO_T        =
AND_T        and
GT_T        >
OR_T        or
GT_T        >
NOT_T        not
GTE_T        >=
DEFINE_T        define
LTE_T        <=
NUMBERP_T        number?
LPAREN_T        (
STRINGP_T        string?
RPAREN_T        )
LISTP_T        list?
SQUOTE_T        '
NUMLIT_T        112312.23
NUMLIT_T        .34123
NUMLIT_T        -1
NUMLIT_T        -2.2
NUMLIT_T        +15
NUMLIT_T        +.5
NUMLIT_T        +5.
ERROR_T        -.
MULT_T        *
.
EOF_T        
